# Generated by Django 5.2.1 on 2025-06-13 14:24

from django.db import migrations


def create_default_project_and_migrate_orders(apps, schema_editor):
    """Create a default project and migrate existing orders to it."""
    Project = apps.get_model('main', 'Project')
    Order = apps.get_model('main', 'Order')
    
    # Create default project
    default_project, created = Project.objects.get_or_create(
        name='Default Project',
        defaults={
            'description': 'Default project for existing orders',
            'status': 'active'
        }
    )
    
    # Migrate orders without a project
    orders_without_project = Order.objects.filter(project__isnull=True)
    for order in orders_without_project:
        order.project = default_project
        order.save()
    
    # Update project counts
    default_project.order_count = default_project.order_set.count()
    # Count products through orders
    order_ids = default_project.order_set.values_list('id', flat=True)
    Product = apps.get_model('main', 'Product')
    default_project.product_count = Product.objects.filter(
        orderitem__order__id__in=order_ids
    ).count()
    default_project.save()


def reverse_migration(apps, schema_editor):
    """Reverse the migration by removing the default project."""
    Project = apps.get_model('main', 'Project')
    try:
        default_project = Project.objects.get(name='Default Project')
        default_project.delete()
    except Project.DoesNotExist:
        pass


class Migration(migrations.Migration):

    dependencies = [
        ("main", "0009_alter_order_project_name_project_order_project_and_more"),
    ]

    operations = [
        migrations.RunPython(create_default_project_and_migrate_orders, reverse_migration),
    ]
